package com.openfooddata.app.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.openfooddata.app.model.News;
import com.openfooddata.app.model.Product;
import com.openfooddata.app.model.Company;
import com.openfooddata.app.model.TestProject;
import com.openfooddata.app.model.User;
import com.openfooddata.app.model.Donation;

import com.openfooddata.app.model.NewsDao;
import com.openfooddata.app.model.ProductDao;
import com.openfooddata.app.model.CompanyDao;
import com.openfooddata.app.model.TestProjectDao;
import com.openfooddata.app.model.UserDao;
import com.openfooddata.app.model.DonationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig newsDaoConfig;
    private final DaoConfig productDaoConfig;
    private final DaoConfig companyDaoConfig;
    private final DaoConfig testProjectDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig donationDaoConfig;

    private final NewsDao newsDao;
    private final ProductDao productDao;
    private final CompanyDao companyDao;
    private final TestProjectDao testProjectDao;
    private final UserDao userDao;
    private final DonationDao donationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        newsDaoConfig = daoConfigMap.get(NewsDao.class).clone();
        newsDaoConfig.initIdentityScope(type);

        productDaoConfig = daoConfigMap.get(ProductDao.class).clone();
        productDaoConfig.initIdentityScope(type);

        companyDaoConfig = daoConfigMap.get(CompanyDao.class).clone();
        companyDaoConfig.initIdentityScope(type);

        testProjectDaoConfig = daoConfigMap.get(TestProjectDao.class).clone();
        testProjectDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        donationDaoConfig = daoConfigMap.get(DonationDao.class).clone();
        donationDaoConfig.initIdentityScope(type);

        newsDao = new NewsDao(newsDaoConfig, this);
        productDao = new ProductDao(productDaoConfig, this);
        companyDao = new CompanyDao(companyDaoConfig, this);
        testProjectDao = new TestProjectDao(testProjectDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        donationDao = new DonationDao(donationDaoConfig, this);

        registerDao(News.class, newsDao);
        registerDao(Product.class, productDao);
        registerDao(Company.class, companyDao);
        registerDao(TestProject.class, testProjectDao);
        registerDao(User.class, userDao);
        registerDao(Donation.class, donationDao);
    }
    
    public void clear() {
        newsDaoConfig.getIdentityScope().clear();
        productDaoConfig.getIdentityScope().clear();
        companyDaoConfig.getIdentityScope().clear();
        testProjectDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        donationDaoConfig.getIdentityScope().clear();
    }

    public NewsDao getNewsDao() {
        return newsDao;
    }

    public ProductDao getProductDao() {
        return productDao;
    }

    public CompanyDao getCompanyDao() {
        return companyDao;
    }

    public TestProjectDao getTestProjectDao() {
        return testProjectDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public DonationDao getDonationDao() {
        return donationDao;
    }

}

package com.cgearc.yummy;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import android.app.Activity;
import android.app.Fragment;
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.net.ParseException;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.Html;
import android.text.Html.ImageGetter;
import android.text.method.ScrollingMovementMethod;
import android.text.Spanned;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.BaseAdapter;
import android.widget.FrameLayout;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

/**
 * Fragment that appears in the "content_frame", shows a planet
 */
public class Act_RecipeDetail extends Activity {
	public static final String ARG_PLANET_NUMBER = "planet_number";
	private static final String TAG = "nevin";
	private RelativeLayout mRelativeLayout;
	
	static int DEFAULT_TEXT_SIZE=14;
	static int MAX_WIDTH  = 300;
	static int MAX_HEIGHT = 200;
	static int scale_ratio;
	
	TextView mDetail;
	ProgressBar bar;
	String body;
	Handler handler;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.act_recipe_detail);
		getActionBar().setDisplayHomeAsUpEnabled(true);

		if (this.getIntent().getStringExtra("body") != null)
			body = this.getIntent().getStringExtra("body");

		mDetail = (TextView) this.findViewById(R.id.tv_recipe_detail);

		if (this.getIntent().getStringExtra("body") != null)
			body = this.getIntent().getStringExtra("body");

		mDetail.setText(Html.fromHtml(body));

		bar = (ProgressBar) this.findViewById(R.id.bar);
		mDetail.setMovementMethod(ScrollingMovementMethod.getInstance());// 滚动
		handler = new Handler() {
			@Override
			public void handleMessage(Message msg) {
				// TODO Auto-generated method stub
				if (msg.what == 0x101) {
					bar.setVisibility(View.GONE);
					mDetail.setText((CharSequence) msg.obj);
				}
				super.handleMessage(msg);
			}
		};
		// 因为从网上下载图片是耗时操作 所以要开启新线程
		Thread t = new Thread(new Runnable() {
			Message msg = Message.obtain();

			@Override
			public void run() {
				bar.setVisibility(View.VISIBLE);

				ImageGetter imageGetter = new ImageGetter() {
					@Override
					public Drawable getDrawable(String source) {
						// TODO Auto-generated method stub
						URL url;
						Drawable drawable = null;
						try {
							url = new URL(source);
							drawable = Drawable.createFromStream(
									url.openStream(), null);
							
							Log.d(TAG,"PIC:"+drawable.getIntrinsicWidth()+"/"+
									drawable.getIntrinsicHeight());
							int scale_x = MAX_WIDTH/drawable.getIntrinsicWidth();
							int scale_y = MAX_HEIGHT/drawable.getIntrinsicHeight();
							scale_ratio = scale_x>scale_y?scale_x:scale_y;
							drawable.setBounds(0, 0,
									drawable.getIntrinsicWidth()*scale_y,
									drawable.getIntrinsicHeight()*scale_y);
							
						} catch (MalformedURLException e) {
							Log.e(TAG, "MalformedURLException" + e.toString());
						} catch (IOException e) {
							Log.e(TAG, "IOException" + e.toString());
						}
						return drawable;
					}
				};
				CharSequence test = Html.fromHtml(body, imageGetter, null);
				msg.what = 0x101;
				msg.obj = test;
				handler.sendMessage(msg);
			}
		});
		t.start();
	}

	@Override
	public void onBackPressed() {
		// finish() is called in super: we only override this method to be able
		// to override the transition
		super.onBackPressed();

		overridePendingTransition(R.anim.activity_back_in,
				R.anim.activity_back_out);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.detail, menu);
		return super.onCreateOptionsMenu(menu);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		int id = item.getItemId();

		switch (id) {
		case R.id.action_font_up:
			mDetail.setTextSize(++DEFAULT_TEXT_SIZE);
			return true;
		case R.id.action_font_down:
			mDetail.setTextSize(--DEFAULT_TEXT_SIZE);
			return true;
		case R.id.action_hide_img:
			// mDetail(mDetail.getTextSize()-1);
			return true;
		case R.id.action_show_img:
			mDetail.setTextSize(mDetail.getTextSize() - 1);
			return true;

			// up button
		case android.R.id.home:
			finish();
			overridePendingTransition(R.anim.activity_back_in,
					R.anim.activity_back_out);
			return true;
		}

		return super.onOptionsItemSelected(item);
	}

}
